
@article{hill_studies_1966,
	title = {Studies in irreversible thermodynamics {IV}. {Diagrammatic} representation of steady state fluxes for unimolecular systems},
	volume = {10},
	issn = {0022-5193},
	doi = {10.1016/0022-5193(66)90137-8},
	abstract = {We consider a system of equivalent, independent units each of which can exist in n states. Transitions between pairs of states follow unimolecular kinetics. Certain models for membrane transport provide examples. The states and allowed transitions, for any given model, can be represented by a basic diagram. Rate constants for the transitions are generally chosen so that the system reaches a non-equilibrium steady state at t = ∞. The population of the different states at steady state can be calculated by a diagram method. Similarly, diagrams may be used to find the steady state net flux between pairs of states. In particular, fluxes can be related to possible cycles in the basic diagram. The difference in products of rate constants around a cycle in opposite directions is related to a thermodynamic force. Hence flux-force equations follow from the diagram approach. These equations are applicable to arbitrary steady states; linear terms exhibit reciprocal relations. Near equilibrium, the conventional flux-force equations of irreversible thermodynamics obtain. The reciprocal relations are compounded from individual cycle reciprocal relations. The latter follow directly from the properties of cycles.},
	language = {en},
	number = {3},
	journal = {Journal of Theoretical Biology},
	author = {Hill, Terrell L.},
	month = apr,
	year = {1966},
	pages = {442--459},
}

@book{hill_free_1977,
	title = {Free {Energy} {Transduction} in {Biology}},
	isbn = {978-0-12-348250-1},
	abstract = {Free Energy Transduction in Biology: The Steady-State Kinetic and Thermodynamic Formalism focuses on the steady-state kinetic and thermodynamic formalism related to free energy transduction. As the word ""formalism"" implies, the discussion concerns general principles and methods and not details of proposed mechanisms in the various special cases. Organized into seven chapters, this book first describes the diagram method, which is the main analytical tool in the study of discrete state, cycling system. The next chapter describes the essential topic of cycles and cycle fluxes. Some chapters discuss the more important bioenergetic principles that emerge from the diagram approach. This book is also concerned with somewhat more specialized aspects of the subject (stochastics and fluctuations) and interacting subsystems and multienzyme complexes, including oxidative phosphorylation.},
	language = {en},
	publisher = {Elsevier},
	author = {Hill, Terrell L.},
	year = {1977},
	doi = {10.1016/B978-0-12-348250-1.X5001-3},
}

@book{hill_free_1989,
	address = {New York},
	title = {Free {Energy} {Transduction} and {Biochemical} {Cycle} {Kinetics}},
	isbn = {978-0-387-96836-0},
	abstract = {This small book is a simplified, abbreviated, and updated version of the author's Free Energy Transduction in Biology, published in 1977 (Academic Press, New York). The present book is meant to be a textbook for a class or for self-study. The first chapter gives a self-contained and elementary discussion of the principles of free energy transduction in biology. Section 5 includes new material on the Onsager coefficients Lij (for systems near equilibrium) not avail­ able in 1977. Some readers may wish to study the first chapter only. The second chapteris a little more sophisticated, and deals with the so-called diagram method for calculating steady-state probabili­ ties and cycle fluxes. Although these concepts are useful in the analysis of free energy transduction systems, they have an intrinsic importance and interest. Section 8 summarizes quite recent new results not included in the 1977 book. The third chapter is again a step more sophisticated. Some readers may wish to omit it. Free energy levels of the states in a kinetic diagram are introduced. This topic is primarily of conceptual inter­ est for ordinary kinetic diagrams but it is essential in understanding muscle contraction (and related systems) at the molecular level. Contents Preface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . vii . . . . . . . . . . . . . . . . Chapter 1 Survey of the Elements of Free Energy Transduction. . . . . . . . . . . . . .. . . . . . . . . . 1 1. States, Diagrams, Cycles, and Free Energy Transduction ...................... 2 2. Thermodynamic Forces. . . . . . . . . . . . . . . . 12 . . . . 3. Operational, Cycle, and Transition Fluxes. . . . . 20 4. Efficiency and the Rate of Free Energy Dissipation . . . . . . . . . . . . . . . . . . 24 . . . . . .},
	language = {en},
	publisher = {Springer-Verlag},
	author = {Hill, Terrell L.},
	year = {1989},
	doi = {10.1007/978-1-4612-3558-3},
}

@article{king_schematic_1956,
	title = {A {Schematic} {Method} of {Deriving} the {Rate} {Laws} for {Enzyme}-{Catalyzed} {Reactions}},
	volume = {60},
	issn = {0022-3654, 1541-5740},
	doi = {10.1021/j150544a010},
	language = {en},
	number = {10},
	journal = {The Journal of Physical Chemistry},
	author = {King, Edward L. and Altman, Carl},
	month = oct,
	year = {1956},
	pages = {1375--1378},
}

@article{chakraborty_algorithms_2019,
	title = {Algorithms for generating all possible spanning trees of a simple undirected connected graph: an extensive review},
	volume = {5},
	issn = {2198-6053},
	shorttitle = {Algorithms for generating all possible spanning trees of a simple undirected connected graph},
	doi = {10.1007/s40747-018-0079-7},
	abstract = {Generation of all possible spanning trees of a graph is a major area of research in graph theory as the number of spanning trees of a graph increases exponentially with graph size. Several algorithms of varying efficiency have been developed since early 1960s by researchers around the globe. This article is an exhaustive literature survey on these algorithms, assuming the input to be a simple undirected connected graph of finite order, and contains detailed analysis and comparisons in both theoretical and experimental behavior of these algorithms.},
	language = {en},
	number = {3},
	journal = {Complex \& Intelligent Systems},
	author = {Chakraborty, Maumita and Chowdhury, Sumon and Chakraborty, Joymallya and Mehera, Ranjan and Pal, Rajat Kumar},
	month = oct,
	year = {2019},
	pages = {265--281},
}

@inproceedings{hagberg_exploring_2008,
	address = {Pasadena, CA USA},
	title = {Exploring {Network} {Structure}, {Dynamics}, and {Function} using {NetworkX}},
	booktitle = {Proceedings of the 7th {Python} in {Science} {Conference}},
	author = {Hagberg, Aric A. and Schult, Daniel A. and Swart, Pieter J.},
	editor = {Varoquaux, Gaël and Vaught, Travis and Millman, Jarrod},
	year = {2008},
	pages = {11 -- 15},
}

@article{meurer_sympy_2017,
	title = {{SymPy}: symbolic computing in {Python}},
	volume = {3},
	issn = {2376-5992},
	shorttitle = {{SymPy}},
	doi = {10.7717/peerj-cs.103},
	abstract = {SymPy is an open source computer algebra system written in pure Python. It is built with a focus on extensibility and ease of use, through both interactive and programmatic applications. These characteristics have led SymPy to become a popular symbolic library for the scientific Python ecosystem. This paper presents the architecture of SymPy, a description of its features, and a discussion of select submodules. The supplementary material provide additional examples and further outline details of the architecture and features of SymPy.},
	language = {en},
	journal = {PeerJ Computer Science},
	author = {Meurer, Aaron and Smith, Christopher P. and Paprocki, Mateusz and Čertík, Ondřej and Kirpichev, Sergey B. and Rocklin, Matthew and Kumar, AMiT and Ivanov, Sergiu and Moore, Jason K. and Singh, Sartaj and Rathnayake, Thilina and Vig, Sean and Granger, Brian E. and Muller, Richard P. and Bonazzi, Francesco and Gupta, Harsh and Vats, Shivam and Johansson, Fredrik and Pedregosa, Fabian and Curry, Matthew J. and Terrel, Andy R. and Roučka, Štěpán and Saboo, Ashutosh and Fernando, Isuru and Kulal, Sumith and Cimrman, Robert and Scopatz, Anthony},
	month = jan,
	year = {2017},
	pages = {e103},
}

@article{harris_array_2020,
	title = {Array programming with {NumPy}},
	volume = {585},
	copyright = {2020 The Author(s)},
	issn = {1476-4687},
	doi = {10.1038/s41586-020-2649-2},
	abstract = {Array programming provides a powerful, compact and expressive syntax for accessing, manipulating and operating on data in vectors, matrices and higher-dimensional arrays. NumPy is the primary array programming library for the Python language. It has an essential role in research analysis pipelines in fields as diverse as physics, chemistry, astronomy, geoscience, biology, psychology, materials science, engineering, finance and economics. For example, in astronomy, NumPy was an important part of the software stack used in the discovery of gravitational waves1 and in the first imaging of a black hole2. Here we review how a few fundamental array concepts lead to a simple and powerful programming paradigm for organizing, exploring and analysing scientific data. NumPy is the foundation upon which the scientific Python ecosystem is constructed. It is so pervasive that several projects, targeting audiences with specialized needs, have developed their own NumPy-like interfaces and array objects. Owing to its central position in the ecosystem, NumPy increasingly acts as an interoperability layer between such array computation libraries and, together with its application programming interface (API), provides a flexible framework to support the next decade of scientific and industrial analysis.},
	language = {en},
	number = {7825},
	journal = {Nature},
	author = {Harris, Charles R. and Millman, K. Jarrod and van der Walt, Stéfan J. and Gommers, Ralf and Virtanen, Pauli and Cournapeau, David and Wieser, Eric and Taylor, Julian and Berg, Sebastian and Smith, Nathaniel J. and Kern, Robert and Picus, Matti and Hoyer, Stephan and van Kerkwijk, Marten H. and Brett, Matthew and Haldane, Allan and del Río, Jaime Fernández and Wiebe, Mark and Peterson, Pearu and Gérard-Marchant, Pierre and Sheppard, Kevin and Reddy, Tyler and Weckesser, Warren and Abbasi, Hameer and Gohlke, Christoph and Oliphant, Travis E.},
	month = sep,
	year = {2020},
	keywords = {Computational neuroscience, Computational science, Computer science, Software, Solar physics},
	pages = {357--362},
}

@article{virtanen_scipy_2020,
	title = {{SciPy} 1.0: fundamental algorithms for scientific computing in {Python}},
	volume = {17},
	copyright = {2020 The Author(s)},
	issn = {1548-7105},
	shorttitle = {{SciPy} 1.0},
	doi = {10.1038/s41592-019-0686-2},
	abstract = {SciPy is an open-source scientific computing library for the Python programming language. Since its initial release in 2001, SciPy has become a de facto standard for leveraging scientific algorithms in Python, with over 600 unique code contributors, thousands of dependent packages, over 100,000 dependent repositories and millions of downloads per year. In this work, we provide an overview of the capabilities and development practices of SciPy 1.0 and highlight some recent technical developments.},
	language = {en},
	number = {3},
	journal = {Nature Methods},
	author = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and Haberland, Matt and Reddy, Tyler and Cournapeau, David and Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and Bright, Jonathan and van der Walt, Stéfan J. and Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and Mayorov, Nikolay and Nelson, Andrew R. J. and Jones, Eric and Kern, Robert and Larson, Eric and Carey, C. J. and Polat, İlhan and Feng, Yu and Moore, Eric W. and VanderPlas, Jake and Laxalde, Denis and Perktold, Josef and Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and Harris, Charles R. and Archibald, Anne M. and Ribeiro, Antônio H. and Pedregosa, Fabian and van Mulbregt, Paul},
	month = mar,
	year = {2020},
	keywords = {Biophysical chemistry, Computational biology and bioinformatics, Technology},
	pages = {261--272},
}

@article{kenney_thermodynamically_2023,
	title = {Thermodynamically consistent determination of free energies and rates in kinetic cycle models},
	volume = {3},
	issn = {2667-0747},
	doi = {10.1016/j.bpr.2023.100120},
	abstract = {Kinetic and thermodynamic models of biological systems are commonly used to connect microscopic features to system function in a bottom-up multiscale approach. The parameters of such models—free energy differences for equilibrium properties and in general rates for equilibrium and out-of-equilibrium observables—have to be measured by different experiments or calculated from multiple computer simulations. All such parameters necessarily come with uncertainties so that when they are naively combined in a full model of the process of interest, they will generally violate fundamental statistical mechanical equalities, namely detailed balance and an equality of forward/backward rate products in cycles due to Hill. If left uncorrected, such models can produce arbitrary outputs that are physically inconsistent. Here, we develop a maximum likelihood approach (named multibind) based on the so-called potential graph to combine kinetic or thermodynamic measurements to yield state-resolved models that are thermodynamically consistent while being most consistent with the provided data and their uncertainties. We demonstrate the approach with two theoretical models, a generic two-proton binding site and a simplified model of a sodium/proton antiporter. We also describe an algorithm to use the multibind approach to solve the inverse problem of determining microscopic quantities from macroscopic measurements and, as an example, we predict the microscopic pKa values and protonation states of a small organic molecule from 1D NMR data. The multibind approach is applicable to any thermodynamic or kinetic model that describes a system as transitions between well-defined states with associated free energy differences or rates between these states. A Python package multibind, which implements the approach described here, is made publicly available under the MIT Open Source license.},
	number = {3},
	journal = {Biophysical Reports},
	author = {Kenney, Ian M. and Beckstein, Oliver},
	month = sep,
	year = {2023},
	pages = {100120},
}

@misc{kenney_becksteinlabmultibind_2022,
	title = {Becksteinlab/multibind: v0.2.0},
	publisher = {Zenodo},
	author = {Kenney, Ian and Beckstein, Oliver},
	month = feb,
	year = {2022},
	doi = {10.5281/zenodo.6227127},
}

@misc{awtrey_becksteinlabkda-examples_2022,
	title = {Becksteinlab/kda-examples: 0.1.0},
	publisher = {Zenodo},
	author = {Awtrey, Nikolaus},
	month = apr,
	year = {2022},
	doi = {10.5281/zenodo.6437044},
}

@misc{awtrey_becksteinlabkda_2022,
	title = {Becksteinlab/kda: 0.1.0},
	publisher = {Zenodo},
	author = {Awtrey, Nikolaus},
	month = jan,
	year = {2022},
	doi = {10.5281/zenodo.5826394},
}
